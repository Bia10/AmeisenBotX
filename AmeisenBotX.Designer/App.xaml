<Application x:Class="AmeisenBotX.Designer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AmeisenBotX.Designer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="DarkBackground">#FF212121</Color>
        <Color x:Key="DarkBackgroundAlt">#FF141414</Color>
        <Color x:Key="DarkForeground">#FFFFFFFF</Color>
        <Color x:Key="DarkBorder">#FF969696</Color>
        <Color x:Key="DarkAccent1">#FFFF6500</Color>
        <Color x:Key="DarkAccent2">#FFFF0000</Color>
        <Color x:Key="DarkAccent3">#FF00FFFF</Color>
        <Color x:Key="DarkError">#FFFF0000</Color>
        <Color x:Key="PlayerHealthBar">#FF80FF00</Color>
        <Color x:Key="PlayerManaBar">#FF00FFFF</Color>
        <Color x:Key="PlayerExpBar">#FFFF8000</Color>
        <Color x:Key="TextAccent">#FFFF0050</Color>
        <Color x:Key="CheckBoxHoverBorder">#FFFF0050</Color>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="{DynamicResource DarkBackground}" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="{DynamicResource DarkBorder}" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{DynamicResource DarkAccent1}" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{DynamicResource DarkBackground}" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{DynamicResource DarkBackground}" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="{DynamicResource DarkBorder}" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{DynamicResource DarkBackground}" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="{DynamicResource DarkBorder}" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{DynamicResource DarkBorder}" />
        <Style x:Key="ButtonStyleDark" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>